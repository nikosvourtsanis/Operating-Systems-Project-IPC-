# README για την 1η Εργασία στο μάθημα Λειτουργικά Συστήματα  2024-25
~Overview
Στην εργασία υλοποιείται ένα σύστημα διεργασιών με διαδιεργασιακή επικοινωνία(IPC) με χρήση σημαφόρων POSIX και μέσω ενός shared memory segment.
Η εργασία επικεντρώνεται στον συγχρονισμο, στη χρήση διαμοιραζόμενης μνήμης  και στην  διαχείριση διεργασιών.

~Χαρακτηριστικά
1. SHARED MEMORY:
 - Ένα τμήμα διαμοιραζόμενης μνήμης που υπαρχει μεταξύ των διεργασιών γονέα και παιδιών.
 - Χρησιμοποιείται για την ανταλλαγή μηνυμάτων και σημάτων τερματισμού.
2. SEMAPHORES:
 - Σημαφόροι για συγχρονισμό  μεταξύ διεργασιών.
 - Ένας σημαφόρος ανά διεργασία -παιδι.
3. PROCESS MANAGEMENT:
 - Η γονική διεργασια δημιουργεί δυναμικά και τερματίζει τις  διεργασίες-παιδια μεε εντολές από ένα αρχείο εντολών(configuration file).
 - Κάθε θυγατρική διαδικασία-παιδί επεξεργάζεται μηνύματα και τερματίζει  όταν λάβει ένα 'σήμα' τερματισμού.

~Συμπεριληφθέντα αρχεία
1. ipc.c:
 - Το main πρόγραμμα που περιέχει τη λογική διαδικασίας γονέα και παιδιού.
2. sharedmem.h:
 - Καθορίζει τη δομή διαμοιραζόμενης μνήμης που χρησιμοποιείται για την επικοινωνία μεταξύ διεργασιών.
3. child.c:
 - Υλοποιεί τη συνάρτησηchild που εκτελείται από κάθε παιδί.
4. child.h:
 - Header file για το child.c
4. empty_resources.c
 - Διαχειρίζεται την εκκαθάριση κοινόχρηστων πόρων (π.χ. σηματοφόρους και μνήμη).
5. empty_resources.h
 - Header file για τις λειτουργίες εκκαθάρισης πόρων.

~Compilation
Υπραχει έτοιμο Makefile ,
οπότε τρέχουμε την εντολή make

~Χρήση
Εκτελέστε το πρόγραμμα με την ακόλουθη εντολή:
./ipc <configuration_file> <text_file> <max_children>

Παράδειγμα:
./ipc config_3_100.txt mobydick.txt 10


~ΠΕΡΙΓΡΑΦΗ ΠΡΟΓΡΑΜΜΑΤΟΣ
Το outout του προγραμματος δείχνει τη λειτουργικότητα των γονικών και θυγατρικών διεργασιών στο χειρισμό της επικοινωνίας μεταξύ των διεργασιών χρησιμοποιώντας διαμοιραζόμενης 
μνήμη και σημαφόρους:

Χειρισμός μηνυμάτων Child Process:

Κάθε θυγατρική διεργασία-παιδί λαμβάνει μηνύματα που αποστέλλονται από τον γονέα μέσω της διαμοιραζόμενης μνήμης.
Τα μηνύματα αναγνωρίζονται  όπως παρακάτω:
child <id> received message: <...>.

Ενέργειες γονικής διαδικασίας:

Η γονική διεργασία διαβάζει εντολές από το αρχείο  (πχ το config_3_100.txt) για να δώσει μετά (S) ή  (T) στις διεργασίες-παιδία.
Τα μηνύματα από ένα αρχείο κειμένου αποστέλλονται σε ενεργά παιδιά, π.χ.
[Parent] Sending message to child <id>: <...>

Τερματισμός διεργασιας-παιδιού:

Όταν δινεται η εντολή T, το παιδί τερματίζει εκτυπώνοντας παράλληλα:
~Σύνολο ληφθέντων μηνυμάτων.
~timestamp_end - timestamp_start

Χειρισμός σφαλμάτων:

Οι μη έγκυρες εντολές στο αρχείο configuration παραλείπονται, με μηνύματα σφάλματος:
Invalid command format: '<line>' in line '<file>'. correct format: '<timestamp> C<child_id> <command>'.

Αποδέσμευση πόρων:

Το πρόγραμμα διασφαλίζει ότι όλοι οι πόροι (σημαφόροι, διαμοιραζόμενη μνήμη) αποδεσμεύονται στο τέλος:
[parent] all resources are now EMPTY.

..ουσιαστικά το προγραμματο

-διαχειρίζεται δυναμικά  τις διεργασίες-παιδιά.
-επικοινωνεί τα τυχαία μηνύματα/ γραμμες απο το αρχειο text μέσω της διαμοιραζόμενης μνήμης.
-χειρίζεται  τα σφάλματα και απελευθερώνει τους πόρους του συστήματος αποτελεσματικά.

~~~ Νικόλαος Βουρτσάνης (sdi2200022)